version: '2'

services:
  dcc-dashboard-service:
    environment:
      APACHE_PATH: "${apache_path}"
      ES_SERVICE: "${es_service}"
      DATABASE_URL: "${database_url}"
      AWS_PROFILE: "${aws_profile}"
      LUIGI_SERVER: "${luigi_server}"
      POSTGRES_USER: "${postgres_user}"
      POSTGRES_PASSWORD: "${postgres_password}"
      POSTGRES_DB: "${postgres_db}"
    image: quay.io/ucsc_cgl/dashboard-service:develop
    ports:
      - "80"
      - "443"
    volumes_from:
      - letsencrypt
    networks:
      - server
      - action
    ports:
      - "9200"
    links:
      - db
  dcc-dashboard:
    image: quay.io/ucsc_cgl/dashboard:develop
    ports:
      - "80"
      - "443"
    environment:
      GOOGLE_CLIENT_ID: "${google_client_id}"
      GOOGLE_CLIENT_SECRET: "${google_client_secret}"
      DCC_DASHBOARD_HOST: "${dcc_dashboard_host}"
      DCC_DASHBOARD_PROTOCOL: "${dcc_dashboard_protocol}"
      DCC_DASHBOARD_SERVICE: "${dcc_dashboard_service}"
      DCC_INVOICING_SERVICE: "${dcc_invoicing_service}"
      DCC_ACTION_SERVICE: "${dcc_action_service}"
    volumes_from:
      - letsencrypt
    networks:
      - server
  nginx:
    build: nginx-image
    links:
      - dcc-dashboard
      - letsencrypt
      - dcc-dashboard-service
    environment:
      MY_DOMAIN_NAME: "${dcc_dashboard_host}"
    mem_limit: 2g
    cpu_shares: 256
    ports:
      - "80:80"
      - "443:443"
    networks:
      - server
    volumes_from:
      - letsencrypt
  letsencrypt:
    image: quay.io/letsencrypt/letsencrypt:latest
    command:  bash -c "sleep 6 && certbot certonly --standalone ${dcc_letsencrypt_staging}  --debug -d ${dcc_dashboard_host} --text --agree-tos --email ${dcc_letsencrypt_email} --server https://acme-v01.api.letsencrypt.org/directory --rsa-key-size 4096 -vvvv --renew-by-default --preferred-challenges http-01"
# --preferred-challenges http-01
    entrypoint: ""
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    ports:
      - "80"
      - "443"
    networks:
      - server
    environment:
      - TERM=xterm
  db:
    image: postgres:9.6-alpine
    environment:
      POSTGRES_PASSWORD: "${postgres_password}"
      POSTGRES_USER: "${postgres_user}"
      POSTGRES_DB: "${postgres_db}"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - action

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local
  postgres:

networks:
  server:
    driver: bridge
